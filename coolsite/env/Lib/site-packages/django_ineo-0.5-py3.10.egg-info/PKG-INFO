Metadata-Version: 2.1
Name: django-ineo
Version: 0.5
Summary: Simple comments for any model. Comments supported response with 2-level hierarchy.
Home-page: https://github.com/proft/django-ineo
Author: Ivan Morgun
Author-email: i@proft.me
License: MIT
Keywords: comments,django
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Framework :: Django

===========
django-ineo
===========

РџСЂРѕСЃС‚Р°СЏ СЃРёСЃС‚РµРјР° РєРѕРјРјРµРЅС‚Р°СЂРёРµРІ РґР»СЏ Р»СЋР±РѕР№ РјРѕРґРµР»Рё. Р•СЃС‚СЊ РІРѕР·РјРѕР¶РЅРѕСЃС‚СЊ РѕС‚РІРµС‚Р° РЅР° РєРѕРјРјРµРЅС‚Р°СЂРёР№ РІРїР»РѕС‚СЊ РґРѕ РІС‚РѕСЂРѕРіРѕ СѓСЂРѕРІРЅСЏ :).
РњРѕРґСѓР»СЊ Р·Р°РІРёСЃРёС‚ РѕС‚ [django-crispy-forms](https://github.com/maraujop/django-crispy-forms/) Рё [django-simple-captcha](https://github.com/mbi/django-simple-captcha).


РЈСЃС‚Р°РЅРѕРІРєР°
=========

1. РЈСЃС‚Р°РЅРѕРІРєР° РјРѕРґСѓР»СЏ Рё Р·Р°РІРёСЃРёРјРѕСЃС‚РµР№ `pip install 'git+https://github.com/proft/django-ineo.git'`;
2. Р”РѕР±Р°РІР»СЏРµРј `ineo` Рё Р·Р°РІРёСЃРёРјРѕСЃС‚Рё РІ INSTALLED_APPS

::

    INSTALLED_APPS = (
        ...
        'ineo',
        'captcha',
        'crispy_forms',
    )

3. Р”РѕР±Р°РІР»СЏРµРј РІ С†РµР»РµРІСѓСЋ РјРѕРґРµР»СЊ РїРѕР»Рµ comments СЃ СЃСЃС‹Р»РєРѕР№ РЅР° GenericRelation (models.py) Рё СѓРєР°Р·С‹РІР°РµРј СЃСЃС‹Р»РєСѓ РЅР° СЃС‚СЂР°РЅРёС†Сѓ СЃ РґРѕР±Р°РІР»РµРЅРёРµРј РєРѕРјРјРµРЅС‚Р°СЂРёРµРІ РґР»СЏ СЌС‚РѕР№ РјРѕРґРµР»Рё РІ `get_comment_add_url`, РІ `prepare_comment_reply_url` СѓРєР°Р·С‹РІР°РµРј Р°РґСЂРµСЃ РґР»СЏ С„РѕСЂРјС‹ СЃ РѕС‚РІРµС‚РѕРј. РџСЂРёРјРµСЂ:

::

    from django.db import models
    from django.contrib.contenttypes import generic
    from django.core.urlresolvers import reverse
    from ineo.models import Comment


    class Animal(models.Model):
        title = models.CharField("Title", max_length=50)
        slug = models.SlugField(u'Slug')
        comments = generic.GenericRelation(Comment)

        class Meta:
            verbose_name = 'Animal'
            verbose_name_plural = 'Animals'

        def __unicode__(self):
            return self.title

        def get_comment_add_url(self):
            return reverse('animals:comment_add', kwargs={'slug': self.slug})

        def prepare_comment_reply_url(self):
            return 'animals:comment-reply', {'slug': self.slug}
            

3. РћРїРёСЃС‹РІР°РµРј Р°РґСЂРµСЃР° РґР»СЏ РґРѕР±Р°РІР»РµРЅРёСЏ РєРѕРјРјРµРЅС‚Р°СЂРёРµРІ Рё РѕС‚РІРµС‚РѕРІ РЅР° РєРѕРјРјРµРЅС‚Р°СЂРёРё РІ urls.py

::
    
    from django.conf.urls import patterns, url
    from animals.models import Animal
    from ineo.views import IneoAddView, IneoReplyView

    urlpatterns = patterns('',
        url(r'^animal/(?P<slug>[-\w]+)/comment/add/$', IneoAddView.as_view(model=Animal, 
            url_kwargs={'slug': 'slug'}), name='comment_add'),
        url(r'^animal/(?P<slug>[-\w]+)/comment/add/(?P<pk>[\d]+)/$', IneoReplyView.as_view(model=Animal, 
            url_kwargs={'slug': 'slug'}), name='comment_reply'),            
    )
            

4. Р’ С€Р°Р±Р»РѕРЅРµ РјРѕРґРµР»Рё РІСЃС‚Р°РІР»СЏРµРј РјРµСЃС‚Рѕ РґР»СЏ РІС‹РІРѕРґР° СЃРїРёСЃРєР° РєРѕРјРјРµРЅС‚Р°СЂРёРµРІ

::

    {% extends "base.html" %}
    {% load ineo_tags %}

    {% block content %}
    {{ animal.title }}

    {% comment_list animal %}

    {% endblock content %}


